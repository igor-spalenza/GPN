@model IEnumerable<GPN.Application.DTOs.PedidoIndexVendasDto>
@{
    ViewData["Title"] = "Módulo de Vendas";
}

<div class="venda-main">
    <div class="venda-lateral-fixa">
        <h3>Workspace de Vendas</h3>

        <img class="tela-inicial" id="btnHomeVendas" src="~/img/inicio-icon.png" alt="Ícone de redirecionamento para a tela inicial" />
        <br /><br />
        <button id="btnAbrirPedido" class="btn btn-sales mb-3">
            Criar Novo Pedido
        </button>
        <h3 class="text-lg font-semibold mb-2">Lembretes</h3>
        <p class="text-sm">Sem lembretes no momento.</p>
    </div>

    <div class="venda-conteudo-dinamico">
        <!-- Abas Dinâmicas -->
        <ul class="nav nav-tabs" id="pedidoTabs" role="tablist"></ul>

        <!-- Conteúdo das Abas -->
        <div class="tab-content" id="pedidoTabsContent">
            <div class="tab-pane fade active show" id="main-tab" role="tabpanel">
                <h2>Pedidos dos Próximos 3 Dias</h2>
                <p>Tá saindo da jaula o monstro mulecote, marcha.</p>

                <table class="table">
                    <thead>
                        <tr>
                            <th>PedidoId</th>
                            <th>ClienteId</th>
                            <th>Data de Criação</th>
                            <th>Data do Pedido</th>
                            <th></th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var pedido in Model)
                        {
                            <tr id="pedido-@pedido.PedidoId">
                                <td>@pedido.PedidoId</td>
                                <td>@pedido.ClienteId</td>
                                <td>@pedido.DataCadastro</td>
                                <td>@pedido.DataPedido</td>
                                <td>
                                    <a class="btn btn-light" href="/Cliente/Details/@pedido.PedidoId">
                                        Visualizar Cliente
                                    </a>

                                    <a class="btn btn-info" href="/Cliente/Edit/@pedido.PedidoId">
                                        Editar Cliente
                                    </a>

                                    <a class="btn btn-danger">
                                        Deletar Cliente
                                        @*onclick="DeletarConcurso(@cliente.ClienteId, '@pedido.PedidoId');"*@
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
        </div>
    </div>

</div>

<script>let abaContador = 1;

document.getElementById('btnAbrirPedido').addEventListener('click', () => {
    abaContador++;
    const pedidoId = `pedido${abaContador}`;

    // Criar a aba dinamicamente
    const novaAba = `
        <li class="nav-item" role="presentation">
            <button class="nav-link"
                    id="${pedidoId}-tab"
                    data-bs-toggle="tab"
                    data-bs-target="#${pedidoId}"
                    type="button"
                    role="tab">
                Novo Pedido
                <span class="btn-close ms-2" onclick="fecharAba('${pedidoId}')"></span>
            </button>
        </li>`;
    document.getElementById('pedidoTabs').insertAdjacentHTML('beforeend', novaAba);

    // Criar o conteúdo da aba e carregar a Partial View via AJAX
    const novoConteudo = `
        <div class="main-div tab-pane fade ${abaContador === 1 ? 'show active' : ''}"
             id="${pedidoId}"
             role="tabpanel">
            <div id="conteudo-${pedidoId}">Carregando...</div>
        </div>`;
    document.getElementById('pedidoTabsContent').insertAdjacentHTML('beforeend', novoConteudo);

    // Chamada AJAX para buscar a Partial View
    fetch('/Venda/NovoPedido')
        .then(response => response.text())
        .then(html => {
            document.getElementById(`conteudo-${pedidoId}`).innerHTML = html;
        })
        .catch(error => {
            document.getElementById(`conteudo-${pedidoId}`).innerHTML = '<p>Erro ao carregar o pedido.</p>';
            console.error('Erro ao carregar a partial view:', error);
        });

    // Ativar a nova aba automaticamente
    const tabTrigger = new bootstrap.Tab(document.getElementById(`${pedidoId}-tab`));
    tabTrigger.show();
});

document.getElementById('btnHomeVendas').addEventListener('click', () => {
    // 1. Remover as classes "active" e "show" de todas as abas ativas
    document.querySelectorAll('.tab-pane.active, .nav-link.active').forEach(element => {
        element.classList.remove('active', 'show');
    });

    // 2. Adicionar as classes "active" e "show" à aba principal
    const mainTab = document.getElementById('main-tab');
    mainTab.classList.add('active', 'show');

    // 3. Ativar a aba principal usando o Bootstrap Tab
    const tabTrigger = new bootstrap.Tab(document.querySelector('[data-bs-target="#main-tab"]'));
    tabTrigger.show();
});

function fecharAba(pedidoId) {
    const aba = document.getElementById(`${pedidoId}-tab`);
    const conteudo = document.getElementById(pedidoId);

    aba.remove();
    conteudo.remove();

    // Voltar para a aba principal se não houver mais abas abertas
    const abasRestantes = document.querySelectorAll('#pedidoTabsContent .nav-link:not(#main-tab)');
    if (abasRestantes.length > 1) {
        const tabTrigger = new bootstrap.Tab(abasRestantes[abasRestantes.length - 1]);
        tabTrigger.show();
    } else {
        const tabTrigger = new bootstrap.Tab(document.getElementById('main-tab'));
        tabTrigger.show();
        document.getElementById('main-tab').classList.add("active show");
    }
}
</script>